{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laiyu\\\\Documents\\\\bookshop\\\\bookshop-react-master\\\\webshop-app\\\\src\\\\pages\\\\CartPage.js\",\n    _s = $RefreshSig$();\n\nimport Container from \"react-bootstrap/esm/Container\";\nimport \"../css/CartPage.css\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport FooterComponent from \"../components/FooterComponent\";\nimport OrderSummary from \"../components/cart/OrderSummary\";\nimport CustomerAddress from \"../components/cart/CustomerAddress\";\nimport Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport { BASE_URL } from \"../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CartPage() {\n  _s();\n\n  const orderList = JSON.parse(localStorage.getItem(\"items\"));\n  const userId = localStorage.getItem(\"user_id\");\n  const isLoggedIn = userId ? true : false;\n  const [cartItems, setCartItems] = useState([]);\n  const [totalCartValue, setTotalCartValue] = useState(0);\n  const [cartItemsNumber, setCartItemsNumber] = useState(0);\n  const [validated, setValidated] = useState(false);\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [currentUser, setCurrentUser] = useState({\n    id: 1,\n    name: \"N/A\",\n    username: \"N/A\",\n    email: \"N/A\",\n    password: \"N/A\",\n    role: \"N/A\",\n    address: {\n      street: \"N/A\",\n      suite: \"N/A\",\n      city: \"N/A\",\n      zipcode: \"000000\"\n    },\n    phone: \"000000000\"\n  });\n  const [deliveryAddress, setDeliveryAddress] = useState({\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    zipcode: \"\"\n  });\n  const [billingAddress, setBillingAddress] = useState({\n    street: \"\",\n    suite: \"\",\n    city: \"\",\n    zipcode: \"\"\n  });\n\n  const changeQuantity = (id, type) => {\n    let isIncrease = type === \"increase\" ? true : false;\n    let array = [...cartItems];\n    const cartItemIndex = array.findIndex(item => item.id === id);\n    let condition = isIncrease ? array[cartItemIndex].quantity < 5 : array[cartItemIndex].quantity > 1;\n    let toastMessage = isIncrease ? \"You have exceeded the maximum quantity available for this product.\" : \"You can remove items by clicking on the trash icon.\";\n\n    if (condition) {\n      if (isIncrease) {\n        setCartItemsNumber(cartItemsNumber + 1);\n      } else {\n        setCartItemsNumber(cartItemsNumber - 1);\n      }\n\n      array[cartItemIndex].quantity = isIncrease ? array[cartItemIndex].quantity + 1 : array[cartItemIndex].quantity - 1;\n      setCartItems(array); //set new cart value\n\n      setTotalCartValue(totalCartValue - array[cartItemIndex].quantity * array[cartItemIndex].price); //set local storage with new array\n\n      let orders = array.map(item => arrayToLocalStorage(item));\n      localStorage.setItem(\"items\", JSON.stringify(orders));\n    } else {\n      setError(true);\n      setErrorMessage(toastMessage);\n      setShow(true);\n    }\n  };\n\n  const deleteCartItem = idToDelete => {\n    let array = [...cartItems];\n    let foundIndex = array.findIndex(item => item.id === idToDelete);\n    let quantity = array[foundIndex].quantity;\n\n    if (foundIndex !== -1) {\n      array.splice(foundIndex, 1);\n\n      if (array.length > 0) {\n        const orders = array.map(item => arrayToLocalStorage(item));\n        localStorage.setItem(\"items\", JSON.stringify(orders));\n      } else {\n        localStorage.removeItem(\"items\");\n      }\n\n      setCartItems(array);\n      setCartItemsNumber(cartItemsNumber - quantity);\n    }\n  };\n\n  const arrayToLocalStorage = _ref => {\n    let {\n      id,\n      name,\n      price,\n      quantity\n    } = _ref;\n    return {\n      id,\n      name,\n      price,\n      quantity\n    };\n  };\n\n  const handleChangeAddress = (e, type) => {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    if (type === \"delivery\") {\n      setDeliveryAddress(previous => {\n        return { ...previous,\n          [name]: value\n        };\n      });\n    } else {\n      setBillingAddress(previous => {\n        return { ...previous,\n          [name]: value\n        };\n      });\n    }\n  };\n\n  const placeOrder = e => {\n    const form = e.currentTarget;\n    setValidated(true);\n    e.preventDefault();\n    const orders = cartItems.map(item => arrayToLocalStorage(item));\n    let order = {\n      data: {\n        user: currentUser.id,\n        delivery_address: { ...deliveryAddress\n        },\n        billing_address: { ...billingAddress\n        },\n        items: orders,\n        total: totalCartValue\n      }\n    };\n\n    if (form.checkValidity()) {\n      fetch(`${BASE_URL}/orders`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(order)\n      }).then(data => {\n        if (data.status === 200) {\n          setError(false);\n          setErrorMessage(\"\");\n          setShow(true);\n          setCartItemsNumber(0);\n          setTimeout(() => {\n            localStorage.removeItem(\"items\");\n          });\n        } else {\n          setError(true);\n          setErrorMessage(\"An error occured! Please try again.\");\n          setShow(true);\n        }\n      });\n    }\n  };\n\n  const getUser = id => {\n    fetch(`${BASE_URL}/users/${id}`).then(response => response.json()).then(data => {\n      setCurrentUser(data);\n      setBillingAddress(data.address);\n      setDeliveryAddress(data.address);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n\n  useEffect(() => {\n    let sum = 0;\n    cartItems.forEach(item => {\n      sum += item.quantity * item.price;\n    });\n    setTotalCartValue(sum);\n  }, [isLoggedIn, cartItems]);\n  useEffect(() => {\n    if (orderList && isLoggedIn) {\n      //set address fields\n      getUser(userId); //add a value to each cartItem\n\n      const orders = orderList.map(item => ({ ...item,\n        value: item.price * item.quantity,\n        id: item.id\n      }));\n      setCartItems(orders);\n    } else if (orderList) {\n      const orders = orderList.map(item => ({ ...item,\n        value: item.price * item.quantity,\n        id: item.id\n      }));\n      setCartItems(orders);\n      let sum = 0;\n      cartItems.forEach(item => {\n        sum += item.quantity * item.price;\n      });\n      setTotalCartValue(sum);\n    }\n\n    if (orderList) {\n      let counter = 0;\n\n      for (let i = 0; i < orderList.length; i++) {\n        counter = counter + orderList[i].quantity;\n      }\n\n      setCartItemsNumber(counter);\n    }\n  }, []); //no items in cart and not logged in\n\n  if (!orderList) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {\n        cartItemsNumber: cartItemsNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-5 pt-5 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your cart is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/books\",\n          children: \"Continue shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-footer\",\n        children: /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  const orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n    cartItems: cartItems,\n    totalCartValue: totalCartValue,\n    changeQuantity: changeQuantity,\n    deleteCartItem: deleteCartItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this); //items in cart and not logged in\n\n\n  if (orderList && !isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {\n        cartItemsNumber: cartItemsNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-5 pt-5 text-center cart-container\",\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        className: \"p-3 bottom-0 end-0\",\n        children: /*#__PURE__*/_jsxDEV(Toast, {\n          onClose: () => setShow(false),\n          show: show,\n          delay: 3000,\n          autohide: true,\n          children: error ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"holder.js/20x20?text=%20\",\n                className: \"rounded me-2\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"me-auto text-danger\",\n                children: \"Error!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"holder.js/20x20?text=%20\",\n                className: \"rounded me-2\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"me-auto text-success\",\n                children: \"Success!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: \"Your ordered!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  } //items in cart and logged in\n\n\n  const address = /*#__PURE__*/_jsxDEV(CustomerAddress, {\n    placeOrder: placeOrder,\n    handleChangeAddress: handleChangeAddress,\n    billingAddress: billingAddress,\n    deliveryAddress: deliveryAddress,\n    validated: validated\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {\n      cartItemsNumber: cartItemsNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        className: \"p-3 bottom-0 end-0\",\n        children: /*#__PURE__*/_jsxDEV(Toast, {\n          onClose: () => setShow(false),\n          show: show,\n          delay: 3000,\n          autohide: true,\n          children: error ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"holder.js/20x20?text=%20\",\n                className: \"rounded me-2\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"me-auto text-danger\",\n                children: \"Error!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"holder.js/20x20?text=%20\",\n                className: \"rounded me-2\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"me-auto text-success\",\n                children: \"Success!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n              children: \"Your ordered!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-5 pt-5 text-center\",\n        children: [orderSummary, orderList && isLoggedIn && address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(CartPage, \"H0j4etExKKF46oChPPn+FGRPKZw=\");\n\n_c = CartPage;\nexport default CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"sources":["C:/Users/laiyu/Documents/bookshop/bookshop-react-master/webshop-app/src/pages/CartPage.js"],"names":["Container","useEffect","useState","Link","NavbarComponent","FooterComponent","OrderSummary","CustomerAddress","Toast","ToastContainer","BASE_URL","CartPage","orderList","JSON","parse","localStorage","getItem","userId","isLoggedIn","cartItems","setCartItems","totalCartValue","setTotalCartValue","cartItemsNumber","setCartItemsNumber","validated","setValidated","show","setShow","error","setError","errorMessage","setErrorMessage","currentUser","setCurrentUser","id","name","username","email","password","role","address","street","suite","city","zipcode","phone","deliveryAddress","setDeliveryAddress","billingAddress","setBillingAddress","changeQuantity","type","isIncrease","array","cartItemIndex","findIndex","item","condition","quantity","toastMessage","price","orders","map","arrayToLocalStorage","setItem","stringify","deleteCartItem","idToDelete","foundIndex","splice","length","removeItem","handleChangeAddress","e","target","value","previous","placeOrder","form","currentTarget","preventDefault","order","data","user","delivery_address","billing_address","items","total","checkValidity","fetch","method","headers","body","then","status","setTimeout","getUser","response","json","catch","console","sum","forEach","counter","i","orderSummary"],"mappings":"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","sourcesContent":["import Container from \"react-bootstrap/esm/Container\";\r\nimport \"../css/CartPage.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport FooterComponent from \"../components/FooterComponent\";\r\nimport OrderSummary from \"../components/cart/OrderSummary\";\r\nimport CustomerAddress from \"../components/cart/CustomerAddress\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\r\nimport { BASE_URL } from \"../Constants\";\r\n\r\nfunction CartPage() {\r\n    const orderList = JSON.parse(localStorage.getItem(\"items\"));\r\n    const userId = localStorage.getItem(\"user_id\");\r\n    const isLoggedIn = userId ? true : false;\r\n\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [totalCartValue, setTotalCartValue] = useState(0);\r\n    const [cartItemsNumber, setCartItemsNumber] = useState(0);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const [currentUser, setCurrentUser] = useState({\r\n        id: 1,\r\n        name: \"N/A\",\r\n        username: \"N/A\",\r\n        email: \"N/A\",\r\n        password: \"N/A\",\r\n        role: \"N/A\",\r\n        address: {\r\n            street: \"N/A\",\r\n            suite: \"N/A\",\r\n            city: \"N/A\",\r\n            zipcode: \"000000\"\r\n        },\r\n        phone: \"000000000\"\r\n    });\r\n    const [deliveryAddress, setDeliveryAddress] = useState({\r\n        street: \"\",\r\n        suite: \"\",\r\n        city: \"\",\r\n        zipcode: \"\"\r\n    });\r\n    const [billingAddress, setBillingAddress] = useState({\r\n        street: \"\",\r\n        suite: \"\",\r\n        city: \"\",\r\n        zipcode: \"\"\r\n    });\r\n\r\n    const changeQuantity = (id, type) => {\r\n        let isIncrease = type === \"increase\" ? true : false;\r\n        let array = [...cartItems];\r\n        const cartItemIndex = array.findIndex((item) => item.id === id);\r\n        let condition = isIncrease\r\n            ? array[cartItemIndex].quantity < 5\r\n            : array[cartItemIndex].quantity > 1;\r\n        let toastMessage = isIncrease\r\n            ? \"You have exceeded the maximum quantity available for this product.\"\r\n            : \"You can remove items by clicking on the trash icon.\";\r\n\r\n        if (condition) {\r\n            if (isIncrease) {\r\n                setCartItemsNumber(cartItemsNumber + 1);\r\n            } else {\r\n                setCartItemsNumber(cartItemsNumber - 1);\r\n            }\r\n            array[cartItemIndex].quantity = isIncrease\r\n                ? array[cartItemIndex].quantity + 1\r\n                : array[cartItemIndex].quantity - 1;\r\n            setCartItems(array);\r\n            //set new cart value\r\n            setTotalCartValue(\r\n                totalCartValue -\r\n                    array[cartItemIndex].quantity * array[cartItemIndex].price\r\n            );\r\n            //set local storage with new array\r\n            let orders = array.map((item) => arrayToLocalStorage(item));\r\n            localStorage.setItem(\"items\", JSON.stringify(orders));\r\n        } else {\r\n            setError(true);\r\n            setErrorMessage(toastMessage);\r\n            setShow(true);\r\n        }\r\n    };\r\n\r\n    const deleteCartItem = (idToDelete) => {\r\n        let array = [...cartItems];\r\n        let foundIndex = array.findIndex((item) => item.id === idToDelete);\r\n        let quantity = array[foundIndex].quantity;\r\n        if (foundIndex !== -1) {\r\n            array.splice(foundIndex, 1);\r\n            if (array.length > 0) {\r\n                const orders = array.map((item) => arrayToLocalStorage(item));\r\n                localStorage.setItem(\"items\", JSON.stringify(orders));\r\n            } else {\r\n                localStorage.removeItem(\"items\");\r\n            }\r\n            setCartItems(array);\r\n            setCartItemsNumber(cartItemsNumber - quantity);\r\n        }\r\n    };\r\n\r\n    const arrayToLocalStorage = ({ id, name, price, quantity }) => ({\r\n        id,\r\n        name,\r\n        price,\r\n        quantity\r\n    });\r\n\r\n    const handleChangeAddress = (e, type) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        if (type === \"delivery\") {\r\n            setDeliveryAddress((previous) => {\r\n                return { ...previous, [name]: value };\r\n            });\r\n        } else {\r\n            setBillingAddress((previous) => {\r\n                return { ...previous, [name]: value };\r\n            });\r\n        }\r\n    };\r\n\r\n    const placeOrder = (e) => {\r\n        const form = e.currentTarget;\r\n        setValidated(true);\r\n        e.preventDefault();\r\n        const orders = cartItems.map((item) => arrayToLocalStorage(item));\r\n\r\n        let order = {\r\n            data: {\r\n                user: currentUser.id,\r\n                delivery_address: { ...deliveryAddress },\r\n                billing_address: { ...billingAddress },\r\n                items: orders,\r\n                total: totalCartValue\r\n            }\r\n        };\r\n\r\n        if (form.checkValidity()) {\r\n            fetch(`${BASE_URL}/orders`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(order)\r\n            }).then((data) => {\r\n                if (data.status === 200) {\r\n                    setError(false);\r\n                    setErrorMessage(\"\");\r\n                    setShow(true);\r\n                    setCartItemsNumber(0);\r\n                    setTimeout(() => {\r\n                        localStorage.removeItem(\"items\");\r\n                    });\r\n                } else {\r\n                    setError(true);\r\n                    setErrorMessage(\"An error occured! Please try again.\");\r\n                    setShow(true);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const getUser = (id) => {\r\n        fetch(`${BASE_URL}/users/${id}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setCurrentUser(data);\r\n                setBillingAddress(data.address);\r\n                setDeliveryAddress(data.address);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        let sum = 0;\r\n        cartItems.forEach((item) => {\r\n            sum += item.quantity * item.price;\r\n        });\r\n        setTotalCartValue(sum);\r\n    }, [isLoggedIn, cartItems]);\r\n\r\n    useEffect(() => {\r\n        if (orderList && isLoggedIn) {\r\n            //set address fields\r\n            getUser(userId);\r\n            //add a value to each cartItem\r\n            const orders = orderList.map((item) => ({\r\n                ...item,\r\n                value: item.price * item.quantity,\r\n                id: item.id\r\n            }));\r\n            setCartItems(orders);\r\n        } else if (orderList) {\r\n            const orders = orderList.map((item) => ({\r\n                ...item,\r\n                value: item.price * item.quantity,\r\n                id: item.id\r\n            }));\r\n            setCartItems(orders);\r\n            let sum = 0;\r\n            cartItems.forEach((item) => {\r\n                sum += item.quantity * item.price;\r\n            });\r\n            setTotalCartValue(sum);\r\n        }\r\n\r\n        if (orderList) {\r\n            let counter = 0;\r\n            for (let i = 0; i < orderList.length; i++) {\r\n                counter = counter + orderList[i].quantity;\r\n            }\r\n            setCartItemsNumber(counter);\r\n        }\r\n    }, []);\r\n\r\n    //no items in cart and not logged in\r\n    if (!orderList) {\r\n        return (\r\n            <>\r\n                <NavbarComponent cartItemsNumber={cartItemsNumber} />\r\n                <Container className=\"mt-5 pt-5 text-center\">\r\n                    <h4>Your cart is empty</h4>\r\n\r\n                    <Link to=\"/books\">Continue shopping</Link>\r\n                </Container>\r\n                <div className=\"cart-footer\">\r\n                    <FooterComponent />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const orderSummary = (\r\n        <OrderSummary\r\n            cartItems={cartItems}\r\n            totalCartValue={totalCartValue}\r\n            changeQuantity={changeQuantity}\r\n            deleteCartItem={deleteCartItem}\r\n        />\r\n    );\r\n\r\n    //items in cart and not logged in\r\n    if (orderList && !isLoggedIn) {\r\n        return (\r\n            <>\r\n                <NavbarComponent cartItemsNumber={cartItemsNumber} />\r\n                <Container className=\"mt-5 pt-5 text-center cart-container\">\r\n                    {orderSummary}\r\n                </Container>\r\n                <ToastContainer className=\"p-3 bottom-0 end-0\">\r\n                    <Toast\r\n                        onClose={() => setShow(false)}\r\n                        show={show}\r\n                        delay={3000}\r\n                        autohide\r\n                    >\r\n                        {error ? (\r\n                            <>\r\n                                <Toast.Header>\r\n                                    <img\r\n                                        src=\"holder.js/20x20?text=%20\"\r\n                                        className=\"rounded me-2\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <strong className=\"me-auto text-danger\">\r\n                                        Error!\r\n                                    </strong>\r\n                                </Toast.Header>\r\n                                <Toast.Body>{errorMessage}</Toast.Body>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Toast.Header>\r\n                                    <img\r\n                                        src=\"holder.js/20x20?text=%20\"\r\n                                        className=\"rounded me-2\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <strong className=\"me-auto text-success\">\r\n                                        Success!\r\n                                    </strong>\r\n                                </Toast.Header>\r\n                                <Toast.Body>Your ordered!</Toast.Body>\r\n                            </>\r\n                        )}\r\n                    </Toast>\r\n                </ToastContainer>\r\n                <FooterComponent />\r\n            </>\r\n        );\r\n    }\r\n\r\n    //items in cart and logged in\r\n    const address = (\r\n        <CustomerAddress\r\n            placeOrder={placeOrder}\r\n            handleChangeAddress={handleChangeAddress}\r\n            billingAddress={billingAddress}\r\n            deliveryAddress={deliveryAddress}\r\n            validated={validated}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <NavbarComponent cartItemsNumber={cartItemsNumber} />\r\n            <>\r\n                <ToastContainer className=\"p-3 bottom-0 end-0\">\r\n                    <Toast\r\n                        onClose={() => setShow(false)}\r\n                        show={show}\r\n                        delay={3000}\r\n                        autohide\r\n                    >\r\n                        {error ? (\r\n                            <>\r\n                                <Toast.Header>\r\n                                    <img\r\n                                        src=\"holder.js/20x20?text=%20\"\r\n                                        className=\"rounded me-2\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <strong className=\"me-auto text-danger\">\r\n                                        Error!\r\n                                    </strong>\r\n                                </Toast.Header>\r\n                                <Toast.Body>{errorMessage}</Toast.Body>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Toast.Header>\r\n                                    <img\r\n                                        src=\"holder.js/20x20?text=%20\"\r\n                                        className=\"rounded me-2\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <strong className=\"me-auto text-success\">\r\n                                        Success!\r\n                                    </strong>\r\n                                </Toast.Header>\r\n                                <Toast.Body>Your ordered!</Toast.Body>\r\n                            </>\r\n                        )}\r\n                    </Toast>\r\n                </ToastContainer>\r\n                <Container className=\"mt-5 pt-5 text-center\">\r\n                    {orderSummary}\r\n                    {orderList && isLoggedIn && address}\r\n                </Container>\r\n                <FooterComponent />\r\n            </>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CartPage;\r\n"]},"metadata":{},"sourceType":"module"}